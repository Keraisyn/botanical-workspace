{"ast":null,"code":"var _jsxFileName = \"/home/rohan/tbd/src/components/timer.js\";\nimport React, { useState, useEffect } from \"react\";\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      minutes: this.props.minutes,\n      seconds: this.props.seconds,\n      isOn: false\n    };\n    this.handleTimerStart = this.handleTimerStart.bind(this);\n  }\n\n  handleTimerStart() {\n    this.setState({\n      isOn: true\n    });\n    this.myInterval = setInterval(() => {\n      const {\n        seconds,\n        minutes\n      } = this.state;\n\n      if (!this.state.isOn) {\n        clearInterval(this.myInterval);\n      }\n\n      if (seconds > 0) {\n        this.setState(({\n          seconds\n        }) => ({\n          seconds: seconds - 1\n        }));\n      }\n\n      if (seconds === 0) {\n        console.log(\"seconds 0\");\n        console.log(minutes);\n\n        if (minutes === 0) {\n          clearInterval(this.myInterval);\n        } else {\n          this.setState(({\n            minutes\n          }) => ({\n            minutes: minutes - 1,\n            seconds: 59\n          }));\n        }\n      }\n    }, 1000);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"visibilitychange\", () => {\n      if (document.hidden && this.state.isOn === true) {\n        this.props.ifFailed();\n        this.setState({\n          isOn: false\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.myInterval);\n  }\n\n  render() {\n    const {\n      minutes,\n      seconds,\n      isOn\n    } = this.state;\n\n    if (isOn) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, minutes === 0 && seconds === 0 ? /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 27\n        }\n      }, \"You made it!\") : /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 27\n        }\n      }, \"Time Remaining: \", minutes, \":\", seconds < 10 ? `0${seconds}` : seconds));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row mb-4 w-50 mx-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        onChange: event => this.setState({\n          minutes: parseInt(event.target.value, 10)\n        }),\n        type: \"number\",\n        className: \"form-control\",\n        placeholder: \"Minutes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        onChange: event => this.setState({\n          seconds: parseInt(event.target.value, 10)\n        }),\n        type: \"number\",\n        className: \"form-control\",\n        placeholder: \"Seconds\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleTimerStart,\n        className: \"btn btn-success btn-lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }\n      }, \"Start Timer\"));\n    }\n  }\n\n}\n\nexport default Timer;","map":{"version":3,"sources":["/home/rohan/tbd/src/components/timer.js"],"names":["React","useState","useEffect","Timer","Component","constructor","props","state","minutes","seconds","isOn","handleTimerStart","bind","setState","myInterval","setInterval","clearInterval","console","log","componentDidMount","document","addEventListener","hidden","ifFailed","componentWillUnmount","render","event","parseInt","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\n\nclass Timer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            minutes: this.props.minutes,\n            seconds: this.props.seconds,\n            isOn: false,\n        }\n        this.handleTimerStart = this.handleTimerStart.bind(this);\n    }\n\n    handleTimerStart() {\n        this.setState({\n            isOn: true,\n        })\n\n        this.myInterval = setInterval(() => {\n            const {seconds, minutes} = this.state\n\n            if (!this.state.isOn) {\n                clearInterval(this.myInterval)\n            }\n\n            if (seconds > 0) {\n                this.setState(({seconds}) => ({\n                    seconds: seconds - 1\n                }))\n            }\n            if (seconds === 0) {\n                console.log(\"seconds 0\")\n                console.log(minutes)\n                if (minutes === 0) {\n                    clearInterval(this.myInterval)\n                } else {\n                    this.setState(({minutes}) => ({\n                        minutes: minutes - 1,\n                        seconds: 59\n                    }))\n                }\n            }\n        }, 1000)\n    }\n\n    componentDidMount() {\n        document.addEventListener(\"visibilitychange\", () => {\n            if (document.hidden && this.state.isOn === true) {\n                this.props.ifFailed();\n                this.setState({\n                    isOn:false,\n                })\n            }\n        })\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.myInterval)\n    }\n\n    render() {\n        const {minutes, seconds, isOn} = this.state\n\n        if (isOn) {\n            return (\n                <div>\n                    {minutes === 0 && seconds === 0\n                        ? <h1>You made it!</h1>\n                        : <h1>Time Remaining: {minutes}:{seconds < 10 ? `0${seconds}` : seconds}</h1>\n                    }\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    {/* Minute and Second Input */}\n                    <div className=\"form-row mb-4 w-50 mx-auto\">\n                        <div className=\"col\">\n                            <input onChange={event => this.setState({minutes: parseInt(event.target.value, 10)})}\n                                   type=\"number\"\n                                   className=\"form-control\" placeholder=\"Minutes\"/>\n                        </div>\n                        <div className=\"col\">\n                            <input onChange={event => this.setState({seconds: parseInt(event.target.value, 10)})}\n                                   type=\"number\"\n                                   className=\"form-control\" placeholder=\"Seconds\"/>\n                        </div>\n                    </div>\n                    <button onClick={this.handleTimerStart} className=\"btn btn-success btn-lg\">Start Timer</button>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Timer;"]},"metadata":{},"sourceType":"module"}